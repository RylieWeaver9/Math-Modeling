# -*- coding: utf-8 -*-
"""Math 388 HW6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Knzc3smBRb_atQX7AZJ6QIyBCf8AIR4X

# **Math 388 HW6 Problem 3**
"""

import numpy as np
import matplotlib.pyplot as plt

"""## V=1"""

# Define Initial Parameters
e = 10**-6
a = 3**0.5
b = 2
v = 1

# Define Initial u, v
u = 1 - e*a
w = -e*b

# Make arrayd for data points
U=[]
W=[]
U.append(u)
W.append(w)

# Run update 1000 times
for i in range(1000):
  u_hold = u
  w_hold = w
  # Update Changes
  u = u_hold + w
  w = w_hold - v*w_hold - (u_hold*(1-u_hold))
  U.append(u)
  W.append(w)

# Scatter and plot
plt.figure(figsize = (12, 8))
plt.title('u vs w')
plt.xlabel('u')
plt.ylabel('w')
plt.grid()
plt.scatter(U,W, c='r', label='Updates')
plt.legend(loc='lower right')
plt.plot(U,W)
plt.show()

"""### As expected, this jumps out of the unstable point and launches into the stable spiral. Very pretty!

## V=3
"""

# Define Initial Parameters
e = 10**-6
a = 3**0.5
b = 2
v = 3

# Define Initial u, v
u = 1 - e*a
w = -e*b

# Make arrayd for data points
U=[]
W=[]
U.append(u)
W.append(w)

# Run update 1000 times
for i in range(20):
  u_hold = u
  w_hold = w
  # Update Changes
  u = u_hold + w
  w = w_hold - v*w_hold - (u_hold*(1-u_hold))
  U.append(u)
  W.append(w)

# Scatter and plot
plt.figure(figsize = (12, 8))
plt.title('u vs w')
plt.xlabel('u')
plt.ylabel('w')
plt.grid()
plt.scatter(U,W, c='r', label='Updates')
plt.legend(loc='lower right')
plt.plot(U,W)
plt.show()